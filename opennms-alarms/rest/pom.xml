<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>opennms-alarms</artifactId>
    <version>30.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>opennms-alarm-rest</artifactId>
  <name>OpenNMS :: Alarms :: Rest</name>
  <packaging>bundle</packaging>
  <build>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
      <testResource>
        <directory>src/test/resources-filtered</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>

      <plugin> <!-- for writing the bundle's manifest -->
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>
            <Import-Package>
              org.eclipse.persistence.internal.jaxb;resolution:=optional,
              org.eclipse.persistence.internal.jaxb.many;resolution:=optional,
              org.eclipse.persistence.jaxb;resolution:=optional,
              org.apache.karaf.jaas.config;resolution:=optional,
              *
            </Import-Package>
            <Export-Package>
              org.opennms.netmgt.alarmd.rest;version="${project.version}"
            </Export-Package>
            <Private-Package>
              org.opennms.web.rest.support,
              org.opennms.netmgt.alarmd.rest.internal
            </Private-Package>
          </instructions>
        </configuration>
      </plugin>

      <plugin> <!-- for starting/loading the container for the IT -->
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.23.0</version>
        <configuration>
          <skip>${skipTests}</skip>
          <showLogs>true</showLogs>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <images>
            <image>
              <name>alarm-application-it-image</name>
              <alias>application</alias>
              <build>
                <from>apache/karaf:4.3.2</from>
                <!-- <from>artnaseef/karaf:4.3.3</from> -->
                <!-- <from>artnaseef/karaf:4.3.3</from>  4.3.2 shouldn't be necessary since hotdeploy works locally -->
                <!-- 4.3.3 checks for stdin (tty) it shuts down shell, which shuts down the container: entryPoint -->
                <!-- <from>mkroli/karaf:4.3</from>  4.2 in case hotdeploy is broken -->

                <assembly>
                  <!-- <user>karaf:users:karaf</user> -->
                  <targetDir>/</targetDir>

                  <inline xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
                          xsi:schemaLocation="
                                             http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2
                                             http://maven.apache.org/xsd/assembly-1.1.2.xsd
                                             ">
                    <files> <!-- ~~~~~~~~~~CONFIG~~~~~~~~~~~ -->
                      <file>
                        <source> <!-- use the local dkcer karaf mounted .m2 -->
                          ${project.build.testOutputDirectory}/org.ops4j.pax.url.mvn.cfg
                        </source>
                        <outputDirectory>/opt/karaf/etc</outputDirectory>
                        <!-- <outputDirectory>/opt/apache-karaf/etc</outputDirectory> -->
                        <destName>org.ops4j.pax.url.mvn.cfg</destName>
                      </file>
                      <file>
                        <source> <!-- config for alarm rest service is currently empty -->
                          ${project.build.testOutputDirectory}/custom.system.properties
                        </source>
                        <outputDirectory>/opt/karaf/etc</outputDirectory>
                        <!-- <outputDirectory>/opt/apache-karaf/etc</outputDirectory> -->
                        <destName>custom.system.properties</destName>
                      </file>
                    </files>

                  </inline>
                </assembly>
                <!--
                <entryPoint>
                  <exec>
                    <arg>/opt/karaf/bin/karaf</arg>
                    <arg>run</arg>
                  </exec>
                </entryPoint>
                -->
              </build>
              <run>
                <ports>
                  <port>karaf-ssh-port:8101</port>
                  <port>karaf-http-port:8181</port>
                </ports>
                <wait>
                  <http>
                    <!-- // curl -X GET http://localhost:8181/cxf/alarmservice/alarms/list -->
                    <url>http://localhost:${karaf-http-port}/cxf/alarmservice</url>
                    <method>GET</method>
                  </http>
                  <time>100000</time> <!-- local hotdeploy takes about 10000 -->
                </wait>
                <volumes> <!-- ~~~~~~~~~~DEPLOY~~~~~~~~~~~ -->
                  <bind>
                    <!--<volume>${user.home}/.m2:/opt/karaf/.m2</volume>-->
                    <volume>${user.home}/.m2:/opt/apache-karaf/.m2</volume>
                    <!--<volume>${project.build.testOutputDirectory}/deploy:/opt/karaf/deploy</volume>-->
                    <volume>${project.build.testOutputDirectory}/deploy:/opt/apache-karaf/deploy</volume>
                  </bind>
                </volumes>
                <network>
                  <mode>custom</mode>
                  <name>alarm-network</name>
                  <alias>application</alias>
                </network>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>start-before-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-after-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin> <!-- for running the integration tests -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.18</version>
        <inherited>false</inherited>
        <configuration>
            <skipITs>${skipTests}</skipITs>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <reuseForks>true</reuseForks>
              <useSystemClassLoader>false</useSystemClassLoader>
              <systemProperties>
                <property>
                  <name>alarm.service.url</name>
                  <value>http://localhost:${karaf-http-port}</value>
                </property>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>verify-it</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-web-api</artifactId>
    </dependency>

    <!-- needed for pulling the principle from the container -->
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.boot</artifactId>
      <version>${karafVersion}</version>
    </dependency>
    <!-- needed for using opennms module instead of default karaf -->
    <dependency>
      <groupId>org.opennms.container</groupId>
      <artifactId>org.opennms.container.jaas-login-module-simple</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>3.0.6</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
</project>
