<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0"
           xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		hteventIpcManagerImpltps://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.5.xsd">

    <!-- MCB note 8nov21. input services here? or load packages (excluding them as well) in mvn bundle plugin?
        [org.opennms.features.events.daemon 78] osgi.wiring.package; (osgi.wiring.package=org.opennms.netmgt.dao.hibernate)
        [org.opennms.features.events.daemon 78] osgi.wiring.package; (osgi.wiring.package=org.opennms.netmgt.eventd)
        [org.opennms.features.events.daemon 78] osgi.wiring.package; (osgi.wiring.package=org.opennms.netmgt.eventd.processor.expandable)`
    -->

    <!-- MCB note 8nov21. tcp and udp listeners not necessary to bring over into blueprint (yet) -->


    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>org.opennms.netmgt.dao.hibernate</value>
                <value>org.opennms.netmgt.model</value>
                <value>org.opennms.netmgt.enlinkd</value>
            </list>
        </property>
        <!--  property name="schemaUpdate" value="true">
          </property -->
        <property name="annotatedPackages">
            <list>
                <value>org.opennms.netmgt.dao.hibernate</value>
                <value>org.opennms.netmgt.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
                hibernate.cache.use_second_level_cache=false
                hibernate.cache=false
                hibernate.cache.use_query_cache=false
                hibernate.jdbc.batch_size=0
                <!-- hibernate.format_sql=true -->
            </value>
        </property>
    </bean>

    <bean id="nodeDao" class="org.opennms.netmgt.dao.hibernate.NodeDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="eventExpander" class="org.opennms.netmgt.eventd.EventExpander">
        <argument ref="eventdMetricRegistry"/>
        <property name="eventConfDao" ref="eventConfDao"/>
        <property name="eventUtil" ref="eventUtil"/>
    </bean>

    <bean id="eventdMetricRegistry" class="com.codahale.metrics.MetricRegistry" />
    <bean id="eventdConfigManager" class="org.opennms.netmgt.config.EventdConfigManager"/>
    <bean id="shouldLogEventSummaries" factory-ref="eventdConfigManager" factory-method="shouldLogEventSummaries"/>
    <bean id="eventdEventHandler" class="org.opennms.netmgt.eventd.DefaultEventHandlerImpl">
        <argument ref="eventdMetricRegistry"/>
        <property name="eventProcessors">
            <list>
                <!--
                  This EventProcessor can be used to perform regex replacements on incoming parm values.
                  It was added in 1.11 and because of performance concerns, it is commented-out for now.
                -->
                <!-- <ref bean="eventParmRegexFilter"/> -->
                <ref component-id="eventExpander"/>
                <ref component-id="eventWriter"/>
                <ref component-id="eventIpcBroadcastProcessor"/>

            </list>
        </property>
        <property name="logEventSummaries" ref="shouldLogEventSummaries" />
        <property name="nodeDao" ref="nodeDao" />
    </bean>

    <bean id="eventIpcManagerImpl" class="org.opennms.netmgt.eventd.EventIpcManagerDefaultImpl">
        <argument ref="eventdMetricRegistry"/>
        <property name="handlerPoolSize" value="1000"/> <!-- TODO ref="eventIpcManagerHandlerPoolSize"-->
        <property name="handlerQueueLength" value="1000"/> <!-- TODO ref="eventIpcManagerHandlerQueueLength"-->
        <property name="eventHandler" ref="eventdEventHandler"/>
    </bean>

    <service ref="eventIpcManagerImpl" interface="org.opennms.netmgt.events.api.EventForwarder">
    </service>

</blueprint>