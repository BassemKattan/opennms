<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
  xmlns:onmsgi="http://xmlns.opennms.org/xsd/spring/onms-osgi"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
  http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd
">

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:annotation-config />

    <!-- Poller Metrics -->
    <bean id="pollerMetricRegistry" class="com.codahale.metrics.MetricRegistry"/>
    <!-- Expose metrics to OSGi for easy access through the Karaf shell -->
    <onmsgi:service ref="pollerMetricRegistry" interface="com.codahale.metrics.MetricSet" >
        <onmsgi:service-properties>
            <entry>
                <key><value>name</value></key>
                <value>pollerd</value>
            </entry>
            <entry>
                <key><value>description</value></key>
                <value>Poller daemon</value>
            </entry>
        </onmsgi:service-properties>
    </onmsgi:service>
    <!-- Expose metrics via JMX -->
    <bean id="pollerdMetricRegistryJmxReporterBuilder" class="com.codahale.metrics.JmxReporter" factory-method="forRegistry">
        <constructor-arg ref="pollerMetricRegistry"/>
    </bean>
    <bean id="pollerdMetricRegistryDomainedJmxReporterBuilder" factory-bean="pollerdMetricRegistryJmxReporterBuilder" factory-method="inDomain">
        <constructor-arg value="org.opennms.netmgt.poller"/>
    </bean>
    <bean id="pollerdMetricRegistryJmxReporter"
          factory-bean="pollerdMetricRegistryDomainedJmxReporterBuilder"
          factory-method="build"
          init-method="start"
          destroy-method="stop" />

    <bean name="pollerQueryManager" class="org.opennms.netmgt.poller.QueryManagerDaoImpl"/>

    <bean name="pollContext" class="org.opennms.netmgt.poller.DefaultPollContext">
      <property name="eventManager" ref="eventIpcManager" />
      <property name="localHostName" ref="localHostName" />
      <property name="name" value="OpenNMS.Poller.DefaultPollContext" />
      <property name="pollerConfig" ref="pollerConfig" />
      <property name="queryManager" ref="pollerQueryManager" />
      <property name="locationAwarePingClient" ref="locationAwarePingClient" />
      <property name="metricRegistry" ref="pollerMetricRegistry" />
    </bean>
    
    <bean name="pollableNetwork" class="org.opennms.netmgt.poller.pollables.PollableNetwork">
        <constructor-arg ref="pollContext" />
    </bean>

    <bean name="daemon" class="org.opennms.netmgt.poller.Poller">
      <property name="network" ref="pollableNetwork" />
      <property name="pollerConfig" ref="pollerConfig" />
      <property name="eventIpcManager" ref="eventIpcManager"/>
    </bean>
    
</beans>
