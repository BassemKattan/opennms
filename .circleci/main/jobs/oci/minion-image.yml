jobs:
  minion-image:
    machine:
      image: ubuntu-2004:202010-01
    environment:
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
      - attach_workspace: 
          at: ~/
      - fetch-artifacts:
          path: ~/project/opennms-assemblies/minion/target/
          location: miniontarget
      - qemu-user-static
      - install-buildx
      - dockerhub-login
      - acr-login
      - run:
          name: Extract miniontarget
          command: |
            mv ~/project/opennms-assemblies/minion/target/minion-target.tar.gz ~/project/
            cd ~/project/
            tar -xvzf minion-target.tar.gz
      - run:
          name: Build Minion OCI
          command: |
            cd opennms-container/minion

            # Create always a downloadable single OCI artifact for AMD architecture.
            # This image is used in our integration test suite which relies on the tag "minion:latest".
            make VERSION="$(../pom2version.py ../../pom.xml)" \
                 DOCKER_TAG="minion:latest" \
                 BUILD_NUMBER="${CIRCLE_BUILD_NUM}" \
                 BUILD_URL="${CIRCLE_BUILD_URL}" \
                 BUILD_BRANCH="${CIRCLE_BRANCH}"
            cd ~/project/
            mkdir target
            mkdir config-schema
            cp opennms-container/minion/minion-config-schema.yml "target/config-schema/"
      - cache-workflow-assets:
          cache_prefix: minion-config-schema
          source_path: target/config-schema/
      - store_artifacts:
          when: always
          path: ~/project/target/config-schema
          destination: config-schema
      - store_artifacts:
          path: ~/project/opennms-container/minion/images/minion.oci
          destination: minion.oci
      - cache-oci:
          key: minion
          path: opennms-container/minion/images/
      - store_artifacts:
          path: ~/project/opennms-container/minion/images/minion-linux-*.oci
